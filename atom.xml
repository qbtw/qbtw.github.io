<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>qbtw</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-28T07:05:26.193Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>qbtw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js dom</title>
    <link href="http://yoursite.com/2017/12/26/My-Gallery/"/>
    <id>http://yoursite.com/2017/12/26/My-Gallery/</id>
    <published>2017-12-26T13:47:00.000Z</published>
    <updated>2017-12-28T07:05:26.193Z</updated>
    
    <content type="html"><![CDATA[<p>js由 语法ECMA 特性DOM.BOM 组成<br>针对api 应用程序接口的<br>document.getElementById(“box”);<br><a id="more"></a></p><h2 id="网站日志"><a href="#网站日志" class="headerlink" title="网站日志"></a>网站日志</h2><p>js由 语法ECMA 特性DOM.BOM 组成<br>针对api 应用程序接口的</p><p> // 获取id为box的这个元素<br>    通过id查找<br>       var box=document.getElementById(“box”);<br>       console.log(box);<br>       // 获取页面中所有的li 标签<br>       var lis=document.getElementsByTagName(“li”);<br>       console.log(lis.length);<br>       // 获取id为list1下的所有的li<br>       var lis2=document.getElementById(“list1”).getElementsByTagName(“li”);<br>标签+id</p><p>设置样式<br>  // 设置id为box的这个元素的文字颜色,属性是减号连接的复合形式时<br>       // 必需要转换为驼峰形式<br>       var box=document.getElementById(“box”);<br>       box.style.color=’#f00’;<br>       box.style.fontWeight=”bold”;<br>       var lis=document.getElementById(“list”).getElementsByTagName(“li”);<br>       // 遍历每一个li<br>       for(var i=0,len=lis.length;i<len;i++){ lis[i].style.color="#00f" ;="" if(i="=0){" lis[i].style.backgroundcolor="#ccc" }else="" }else{="" }="" <="" script=""><br>如果是font-size 那就要改成驼峰形式fontSize<br>Tagname返回的都是数组<br>id是一个值 因为id是唯一的</len;i++){></p><p>innerHTML 获取和设置标签之间的文本和html内容 会打印出标签内的 标签和文本的内容</p><p><div class="box" id="box"><br>        元素1<br>    </div><br>    <ul id="list"><br>        <li><i>前端开发</i></li><br>        <li class="on"><b>服务器端开发</b></li><br>        <li>UI设计</li><br>    </ul><br>    <script><br>       var lis=document.getElementById(“list”).getElementsByTagName(“li”);<br>       for(var i=0,len=lis.length;i<len;i++){           console.log(lis[i].innerHTML);           lis[i].innerHTML+='程序';           lis[1].className="current";       }       console.log(document.getElementById("box").className);    </script><br>lis[i].innerHTML+=’程序’; 文本内容里面加程序两个字<br>lis[1].className=”current”;给第二个li加class加一个current属性<br>console.log(document.getElementById(“box”).className); 获取class属性<br>class只能替换不能新增</p><p><head><br>    <meta charset="UTF-8"><br>    <title>Document</title><br>    <style><br>      .on{border-bottom:1px solid #0f0;}<br>      .current{background:#ccc;color:#f00;}<br>    </style><br></head></p><body><br>    <p id="text" class="text" align="center" data-type="title">文本</p><br>    <input type="text" name="user" value="user" id="user" validate="true"><br>    <script><br>        var p=document.getElementById(“text”);<br>        var user=document.getElementById(“user”);  // null<br>        console.log(p.getAttribute(“class”));  //p.className<br>        console.log(user.getAttribute(“validate”));<br>        // 给p设置一个data-color的属性<br>        p.setAttribute(“data-color”,”red”);<br>        // 给input设置一个isRead的属性<br>        user.setAttribute(“isRead”,”false”);<br>        // 删除p上的align属性<br>        p.removeAttribute(“align”);<br>    </script><br></body><p>var user=document.getElementById(“user”); 要获取属性 要先获取id<br>user.getAttribute(“validate”) 要获取这个validate属性<br>然后就是设置和删除这几个属性<br>user.setAttribute(“isRead”,”false”);<br>p.removeAttribute(“align”);<br>如果说type name id value 可以直接用user.id 这种写出来 因为这都是它自带的<br>有些属性是自己定义的 所以需要getAttribute</p><p>dom事件<br>js和html交互就是事件</p><p><head><br>    <meta charset="UTF-8"><br>    <title>Document</title><br>    <style><br>       .btn{width:140px;height:30px;line-height: 30px;background:#00f;<br>           color:#fff;font-size:14px;text-align:center;border-radius:5px;<br>           cursor:pointer;margin-top:30px;}<br>    </style><br></head></p><p><body><br>    <input type="button" value="弹 出" onclick="alert('我是按钮')"><br>    <!--鼠标划过按钮时调用mouseoverFn的函数--><br>    <div class="btn" onmouseover="mouseoverFn(this,'#f00')" onmouseout="mouseoutFn(this,'#ff0')">开始</div><br>    <div class="btn" onmouseover="mouseoverFn(this,'#0f0')" onmouseout="mouseoutFn(this,'#333')">结束</div><br>    <script><br>        function mouseoverFn(btn,bgColor){<br>            // 鼠标划过按钮时，按钮的背景变为红色<br>            btn.style.background=bgColor;<br>        }<br>        function mouseoutFn(btn,bgColor){<br>            btn.style.background=bgColor;<br>        }<br>    </script><br></body><br>事件触发函数中 this是对该dom对象的引用</p><p>bom对象核心是windows</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;js由 语法ECMA 特性DOM.BOM 组成&lt;br&gt;针对api 应用程序接口的&lt;br&gt;document.getElementById(“box”);&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="个人日志" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="代码" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>前端面试题</title>
    <link href="http://yoursite.com/2017/12/25/%E5%9C%A8%E5%8A%AA%E5%8A%9B%E5%B0%9D%E8%AF%95%E7%9A%84%E6%88%91-%E5%BE%88%E7%B4%AF/"/>
    <id>http://yoursite.com/2017/12/25/在努力尝试的我-很累/</id>
    <published>2017-12-25T15:29:49.000Z</published>
    <updated>2017-12-28T07:05:06.266Z</updated>
    
    <content type="html"><![CDATA[<p>XHTML和HTML有什么区别</p><p>HTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言</p><a id="more"></a><h2 id="网站日志"><a href="#网站日志" class="headerlink" title="网站日志"></a>网站日志</h2><p>HTML面试题<br>1.XHTML和HTML有什么区别</p><p>HTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言<br>最主要的不同：<br>XHTML 元素必须被正确地嵌套。<br>XHTML 元素必须被关闭。<br>标签名必须用小写字母。<br>XHTML 文档必须拥有根元素。<br>2.前端页面有哪三层构成，分别是什么?作用是什么?</p><p>结构层 Html 表示层 CSS 行为层 js;<br>3.你做的页面在哪些流览器测试过?这些浏览器的内核分别是什么?<br>Ie(Ie内核) 火狐（Gecko） 谷歌（webkit,Blink） opera(Presto),Safari(wbkit)<br>4.什么是语义化的HTML?</p><p>直观的认识标签 对于搜索引擎的抓取有好处，用正确的标签做正确的事情！<br>html语义化就是让页面的内容结构化，便于对浏览器、搜索引擎解析；<br>在没有样式CCS情况下也以一种文档格式显示，并且是容易阅读的。搜索引擎的爬虫依赖于标记来确定上下文和各个关键字的权重，利于 SEO。<br>使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。<br>5.HTML5 为什么只需要写 !DOCTYPE HTML？</p><p>HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）；而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。<br>6.Doctype作用？标准模式与兼容模式各有什么区别?</p><p>!DOCTYPE声明位于位于HTML文档中的第一行，处于html 标签之前。告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。<br>标准模式的排版 和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。<br>7.html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和<br>HTML5？</p><p>HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。<br>绘画 canvas<br>用于媒介回放的 video 和 audio 元素<br>本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失；<br>sessionStorage 的数据在浏览器关闭后自动删除<br>语意化更好的内容元素，比如 article、footer、header、nav、section<br>表单控件，calendar、date、time、email、url、search<br>新的技术webworker, websockt, Geolocation<br>移除的元素<br>纯表现的元素：basefont，big，center，font, s，strike，tt，u；<br>对可用性产生负面影响的元素：frame，frameset，noframes；<br>支持HTML5新标签：<br>IE8/IE7/IE6支持通过document.createElement方法产生的标签，<br>可以利用这一特性让这些浏览器支持HTML5新标签，<br>浏览器支持新标签后，还需要添加标签默认的样式：<br>8.请描述一下 cookies，sessionStorage 和 localStorage 的区别？</p><p>cookie在浏览器和服务器间来回传递。 sessionStorage和localStorage不会<br>sessionStorage和localStorage的存储空间更大；<br>sessionStorage和localStorage有更多丰富易用的接口；<br>sessionStorage和localStorage各自独立的存储空间；<br>9.如何实现浏览器内多个标签页之间的通信?</p><p>调用localstorge、cookies等本地存储方式<br>CSS面试题<br>1.简要说一下CSS的元素分类</p><p>块级元素：div,p,h1,form,ul,li;<br>行内元素 : span&gt;,a,label,input,img,strong,em;<br>2.CSS隐藏元素的几种方法（至少说出三种）</p><p>Opacity:元素本身依然占据它自己的位置并对网页的布局起作用。它也将响应用户交互;<br>Visibility:与 opacity 唯一不同的是它不会响应任何用户交互。此外，元素在读屏软件中也会被隐藏;<br>Display:display 设为 none 任何对该元素直接打用户交互操作都不可能生效。此外，读屏软件也不会读到元素的内容。这种方式产生的效果就像元素完全不存在;<br>Position:不会影响布局，能让元素保持可以操作;<br>Clip-path:clip-path 属性还没有在 IE 或者 Edge 下被完全支持。如果要在你的 clip-path 中使用外部的 SVG 文件，浏览器支持度还要低;<br>3.CSS清除浮动的几种方法（至少两种）</p><p>使用带clear属性的空元素<br>使用CSS的overflow属性；<br>使用CSS的:after伪元素；<br>使用邻接元素处理；<br>4.CSS居中（包括水平居中和垂直居中）</p><p>内联元素居中方案<br>水平居中设置：<br>1.行内元素</p><p>设置 text-align:center；<br>2.Flex布局</p><p>设置display:flex;justify-content:center;(灵活运用,支持Chroime，Firefox，IE9+)<br>垂直居中设置：<br>1.父元素高度确定的单行文本（内联元素）</p><p>设置 height = line-height；<br>2.父元素高度确定的多行文本（内联元素）</p><p>a:插入 table （插入方法和水平居中一样），然后设置 vertical-align:middle；<br>b:先设置 display:table-cell 再设置 vertical-align:middle；<br>块级元素居中方案<br>水平居中设置：<br>1.定宽块状元素</p><p>设置 左右 margin 值为 auto；<br>2.不定宽块状元素</p><p>a:在元素外加入 table 标签（完整的，包括 table、tbody、tr、td），该元素写在 td 内，然后设置 margin 的值为 auto；<br>b:给该元素设置 displa:inine 方法；<br>c:父元素设置 position:relative 和 left:50%，子元素设置 position:relative 和 left:50%；<br>垂直居中设置：</p><p>使用position:absolute（fixed）,设置left、top、margin-left、margin-top的属性;<br>利用position:fixed（absolute）属性，margin:auto这个必须不要忘记了;<br>利用display:table-cell属性使内容垂直居中;<br>使用css3的新属性transform:translate(x,y)属性;<br>使用:before元素;<br>5.写出几种IE6 BUG的解决方法</p><p>双边距BUG float引起的 使用display<br>3像素问题 使用float引起的 使用dislpay:inline -3px<br>超链接hover 点击后失效 使用正确的书写顺序 link visited hover active<br>Ie z-index问题 给父级添加position:relative<br>Png 透明 使用js代码 改<br>Min-height 最小高度 ！Important 解决’<br>select 在ie6下遮盖 使用iframe嵌套<br>为什么没有办法定义1px左右的宽度容器（IE6默认的行高造成的，使用over:hidden,zoom:0.08 line-height:1px）<br>6.对于SASS或是Less的了解程度？喜欢那个？</p><p>语法介绍<br>7.Bootstrap了解程度</p><p>特点，排版，插件的使用;<br>8.页面导入样式时，使用link和@import有什么区别？</p><p>link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS;<br>页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;<br>import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;<br>9.介绍一下CSS的盒子模型？</p><p>有两种， IE 盒子模型、标准 W3C 盒子模型；IE的content部分包含了 border 和 pading;<br>盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border).<br>10.CSS 选择符有哪些？哪些属性可以继承？优先级算法如何计算？ CSS3新增伪类有那些？</p><p>id选择器（ # myid）<br>类选择器（.myclassname）<br>标签选择器（div, h1, p）<br>相邻选择器（h1 + p）<br>子选择器（ul &gt; li）<br>后代选择器（li a）<br>通配符选择器（ * ）<br>属性选择器（a[rel = “external”]）<br>伪类选择器（a: hover, li: nth – child）<br>可继承的样式： font-size font-family color, UL LI DL DD DT;<br>不可继承的样式：border padding margin width height ;<br>优先级就近原则，同权重情况下样式定义最近者为准;<br>优先级为:<br>JavaScript</p><p>!important &gt;  id &gt; class &gt; tag<br>important 比 内联优先级高<br>1<br>2<br>!important &gt;  id &gt; class &gt; tag<br>important 比 内联优先级高<br>11.CSS3有哪些新特性？</p><p>CSS3实现圆角（border-radius:8px），阴影（box-shadow:10px），<br>对文字加特效（text-shadow、），线性渐变（gradient），旋转（transform）<br>transform:rotate(9deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);//旋转,缩放,定位,倾斜<br>增加了更多的CSS选择器 多背景 rgba<br>JavaScript面试题<br>1.javascript的typeof返回哪些数据类型</p><p>Ｏbject number function boolean underfind;<br>2.例举3种强制类型转换和2种隐式类型转换?</p><p>强制（parseInt,parseFloat,number）隐式（== – ===）；<br>3.数组方法pop() push() unshift() shift()</p><p>Push()尾部添加 pop()尾部删除<br>Unshift()头部添加 shift()头部删除<br>4.ajax请求的时候get 和post方式的区别?</p><p>一个在url后面 一个放在虚拟载体里面<br>有大小限制<br>安全问题<br>应用不同 一个是论坛等只需要请求的，一个是类似修改密码的;<br>5.call和apply的区别</p><p>Object.call(this,obj1,obj2,obj3)<br>Object.apply(this,arguments)<br>6.ajax请求时，如何解释json数据</p><p>使用eval parse,鉴于安全性考虑 使用parse更靠谱;<br>7.事件委托是什么</p><p>让利用事件冒泡的原理，让自己的所触发的事件，让他的父元素代替执行！<br>8.闭包是什么，有什么特性，对页面有什么影响?简要介绍你理解的闭包</p><p>闭包就是能够读取其他函数内部变量的函数。<br>9.添加 删除 替换 插入到某个接点的方法</p><p>obj.appendChidl()<br>obj.innersetBefore<br>obj.replaceChild<br>obj.removeChild<br>10.说一下什么是javascript的同源策略？</p><p>一段脚本只能读取来自于同一来源的窗口和文档的属性，这里的同一来源指的是主机名、协议和端口号的组合<br>11.编写一个b继承a的方法;</p><p>JavaScript</p><p>function A(name){<br>    this.name = name;<br>    this.sayHello = function(){alert(this.name+” say Hello!”);};<br>}<br>function B(name,id){<br>    this.temp = A;<br>    this.temp(name);        //相当于new A();<br>    delete this.temp;<br>     this.id = id;<br>    this.checkId = function(ID){alert(this.id==ID)};<br>}<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>function A(name){<br>    this.name = name;<br>    this.sayHello = function(){alert(this.name+” say Hello!”);};<br>}<br>function B(name,id){<br>    this.temp = A;<br>    this.temp(name);        //相当于new A();<br>    delete this.temp;<br>     this.id = id;<br>    this.checkId = function(ID){alert(this.id==ID)};<br>}<br>12.如何阻止事件冒泡和默认事件</p><p>JavaScript</p><p>function stopBubble(e)<br>{<br>    if (e &amp;&amp; e.stopPropagation)<br>        e.stopPropagation()<br>    else<br>        window.event.cancelBubble=true<br>}<br>return false<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>function stopBubble(e)<br>{<br>    if (e &amp;&amp; e.stopPropagation)<br>        e.stopPropagation()<br>    else<br>        window.event.cancelBubble=true<br>}<br>return false<br>13.下面程序执行后弹出什么样的结果?</p><p>JavaScript</p><p>function fn() {<br>    this.a = 0;<br>    this.b = function() {<br>        alert(this.a)<br>    }<br>}<br>fn.prototype = {<br>    b: function() {<br>        this.a = 20;<br>        alert(this.a);<br>    },<br>    c: function() {<br>        this.a = 30;<br>        alert(this.a);<br>    }<br>}<br>var myfn = new fn();<br>myfn.b();<br>myfn.c();<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>function fn() {<br>    this.a = 0;<br>    this.b = function() {<br>        alert(this.a)<br>    }<br>}<br>fn.prototype = {<br>    b: function() {<br>        this.a = 20;<br>        alert(this.a);<br>    },<br>    c: function() {<br>        this.a = 30;<br>        alert(this.a);<br>    }<br>}<br>var myfn = new fn();<br>myfn.b();<br>myfn.c();<br>14.谈谈This对象的理解。</p><p>this是js的一个关键字，随着函数使用场合不同，this的值会发生变化。<br>但是有一个总原则，那就是this指的是调用函数的那个对象。<br>this一般情况下：是全局对象Global。 作为方法调用，那么this就是指这个对象</p><p>15.下面程序的结果</p><p>JavaScript</p><p>function fun(n,o) {<br>  console.log(o)<br>  return {<br>    fun:function(m){<br>      return fun(m,n);<br>    }<br>  };<br>}<br>var a = fun(0);  a.fun(1);  a.fun(2);  a.fun(3);<br>var b = fun(0).fun(1).fun(2).fun(3);<br>var c = fun(0).fun(1);  c.fun(2);  c.fun(3);<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>function fun(n,o) {<br>  console.log(o)<br>  return {<br>    fun:function(m){<br>      return fun(m,n);<br>    }<br>  };<br>}<br>var a = fun(0);  a.fun(1);  a.fun(2);  a.fun(3);<br>var b = fun(0).fun(1).fun(2).fun(3);<br>var c = fun(0).fun(1);  c.fun(2);  c.fun(3);<br>//答案：</p><p>//a: undefined,0,0,0<br>//b: undefined,0,1,2<br>//c: undefined,0,1,1</p><p>16.下面程序的输出结果</p><p>JavaScript</p><p>var name = ‘World!’;<br>(function () {<br>    if (typeof name === ‘undefined’) {<br>        var name = ‘Jack’;<br>        console.log(‘Goodbye ‘ + name);<br>    } else {<br>        console.log(‘Hello ‘ + name);<br>    }<br>})();<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>var name = ‘World!’;<br>(function () {<br>    if (typeof name === ‘undefined’) {<br>        var name = ‘Jack’;<br>        console.log(‘Goodbye ‘ + name);<br>    } else {<br>        console.log(‘Hello ‘ + name);<br>    }<br>})();<br>17.了解Node么？Node的使用场景都有哪些？</p><p>高并发、聊天、实时消息推送<br>18.介绍下你最常用的一款框架</p><p>jquery,rn,angular等;<br>19.对于前端自动化构建工具有了解吗？简单介绍一下</p><p>Gulp,Grunt等；<br>20.介绍一下你了解的后端语言以及掌握程度</p><p>其它<br>1.对Node的优点和缺点提出了自己的看法？</p><p>(优点）<br>因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，<br>因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。<br>此外，与Node代理服务器交互的客户端代码是由javascript语言编写的，<br>因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。<br>（缺点）<br>Node是一个相对新的开源项目，所以不太稳定，它总是一直在变，<br>而且缺少足够多的第三方库支持。看起来，就像是Ruby/Rails当年的样子。</p><p>2.你有哪些性能优化的方法？</p><p>（1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。<br>（2）前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数<br>（3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。<br>（4） 当需要设置的样式很多时设置className而不是直接操作style。<br>（5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。<br>（6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。<br>（7） 图片预加载，将样式表放在顶部，将脚本放在底部 加上时间戳。<br>（8） 避免在页面的主体布局中使用table，table要等其中的内容完全下载之后才会显示出来，显示div+css布局慢。对普通的网站有一个统一的思路，就是尽量向前端优化、减少数据库操作、减少磁盘IO。向前端优化指的是，在不影响功能和体验的情况下，能在浏览器执行的不要在服务端执行，能在缓存服务器上直接返回的不要到应用服务器，程序能直接取得的结果不要到外部取得，本机内能取得的数据不要到远程取，内存能取到的不要到磁盘取，缓存中有的不要去数据库查询。减少数据库操作指减少更新次数、缓存结果减少查询次数、将数据库执行的操作尽可能的让你的程序完成（例如join查询），减少磁盘IO指尽量不使用文件系统作为缓存、减少读写文件次数等。程序优化永远要优化慢的部分，换语言是无法“优化”的。</p><p>3.http状态码有那些？分别代表是什么意思？<br>100-199 用于指定客户端应相应的某些动作。<br>200-299 用于表示请求成功。<br>300-399 用于已经移动的文件并且常被包含在定位头信息中指定新的地址信息。<br>400-499 用于指出客户端的错误。400 1、语义有误，当前请求无法被服务器理解。401 当前请求需要用户验证 403 服务器已经理解请求，但是拒绝执行它。<br>500-599 用于支持服务器错误。 503 – 服务不可用<br>4.一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？（流程说的越详细越好）</p><p>查找浏览器缓存<br>DNS解析、查找该域名对应的IP地址、重定向（301）、发出第二个GET请求<br>进行HTTP协议会话<br>客户端发送报头(请求报头)<br>文档开始下载<br>文档树建立，根据标记请求所需指定MIME类型的文件<br>文件显示<br>浏览器这边做的工作大致分为以下几步：<br>加载：根据请求的URL进行域名解析，向服务器发起请求，接收文件（HTML、JS、CSS、图象等）。<br>解析：对加载到的资源（HTML、JS、CSS等）进行语法解析，建议相应的内部数据结构（比如HTML的DOM树，JS的（对象）属性表，CSS的样式规则等等）<br>5.你常用的开发工具是什么，为什么？</p><p>Sublime,Atom,Nodepad++;<br>6.说说最近最流行的一些东西吧？常去哪些网站？</p><p>Node.js、MVVM、React-native,Angular,Weex等<br>CSDN,Segmentfault,博客园,掘金,Stackoverflow,伯乐在线等<br><!--more--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XHTML和HTML有什么区别&lt;/p&gt;
&lt;p&gt;HTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言&lt;/p&gt;
    
    </summary>
    
      <category term="个人日志" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
</feed>
